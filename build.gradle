/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.4/userguide/tutorial_java_projects.html
 */
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

/* -----------------------------------------------------------------------------
 *  Configuration Section
 */

mainClassName = 'org.viduus.charon.minesweeper.GameRunner'
sourceCompatibility = 1.8
targetCompatibility = 1.8

project.ext.projectVersion = '0.0.1'

/* -----------------------------------------------------------------------------
 *  Setup Section
 */

// Account for operating system
import org.gradle.internal.os.OperatingSystem
switch ( OperatingSystem.current() ) {
	case OperatingSystem.WINDOWS:
		break
	case OperatingSystem.LINUX:
	case OperatingSystem.MAC_OS:
		applicationDefaultJvmArgs = ["-XstartOnFirstThread"]
		break
}

sourceSets {
	main {
		java {
			srcDirs = ['src']
		}
	}
}

/* -----------------------------------------------------------------------------
 *  Task Section
 */

jar {
	baseName = "${project.name}"
	version =  "${projectVersion}"
}

task('runDebug', dependsOn: 'classes', type: JavaExec, group: 'application') {
	main = mainClassName
	classpath = sourceSets.main.runtimeClasspath
	jvmArgs = ["-XstartOnFirstThread", "-Xdebug", "-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5006"]
}

// When exporting project make sure command line arguments are correct
startScripts {
	doLast {
		// normalize if deploying from mac
		unixScript.text = unixScript.text.replace('DEFAULT_JVM_OPTS=\'"-XstartOnFirstThread"\'', 'DEFAULT_JVM_OPTS=""')
		windowsScript.text = windowsScript.text.replace('DEFAULT_JVM_OPTS="-XstartOnFirstThread"', 'DEFAULT_JVM_OPTS=')

		// add arguments again
		unixScript.text = unixScript.text.replace('DEFAULT_JVM_OPTS=""', 'DEFAULT_JVM_OPTS=\'"-XstartOnFirstThread"\'')
		windowsScript.text = windowsScript.text.replace('DEFAULT_JVM_OPTS=', 'DEFAULT_JVM_OPTS=')
	}
}

jar.dependsOn startScripts

/* -----------------------------------------------------------------------------
 *  Dependency Section
 */

project.ext.lwjglVersion = "3.1.1"
project.ext.steamworks4jVersion = "1.6.1"
project.ext.jomlVersion = "1.9.2"

repositories {
	jcenter()
}

dependencies {
	runtime files('files')

	// The production code uses the SLF4J logging API at compile time
	compile 'org.slf4j:slf4j-api:1.7.21'

	// Declare the dependency for your favourite test framework you want to use in your tests.
	// TestNG is also supported by the Gradle Test task. Just change the
	// testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
	// 'test.useTestNG()' to your build script.
	testCompile 'junit:junit:4.12'

	// Charon Engine
	compile project(':charon-engine')
}
